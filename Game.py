# ==============================================================================
# 345678901234567890123456789012345678901234567890123456789012345678901234567890
# ==============================================================================
"""
2-プレイヤー・ゲーム.

    2021-05-19 IIJIMA, Tadashi
    (Original: Copyright (c) 2013 Zulko The MIT License)

  * 本来は，pip install easyAIで使用可能になるが...
    * 今回はこの先の改良のためにあえてソースコードを取り込んでいる．
    * https://pypi.org/project/easyAI/
  * ソースコード入手元:
    * https://github.com/Zulko/easyAI
"""

# ==============================================================================
from copy import deepcopy
# ==============================================================================

# ==============================================================================
# ===== 【クラス】  =====
# ==============================================================================
class TwoPlayersGame:
    """ 2-プレイヤー・ゲーム.

    """
    # ==========================================================================

    # ==========================================================================
    # ===== [メソッド] 対戦する =====
    # ==========================================================================
    def play( self, nmoves=1000, verbose=True, move_list=[] ):
        """ .
        """
        # ======================================================================

        history = []
        # ======================================================================
        if verbose:
            self.show()
        # ======================================================================
        for self.nmove in range( 1, nmoves + 1 ):
            # ==================================================================
            if self.is_over():
                break
            # ==================================================================
            if self.nmove <= 2 * len( move_list ) - 1:
                move = self.player.ask_move( self, move_list[ int( ( self.nmove - 1 ) / 2 ) ] )
                history.append( ( deepcopy( self ), move ) )
                self.make_move( move )
            else:
                move = self.player.ask_move( self )
                history.append( ( deepcopy( self ), move ) )
                self.make_move( move )
                break
            # ==================================================================
            if verbose:
#                 print( "\nMove #%d: player %d plays %s :" % (
#                       self.nmove, self.nplayer, str(move)))
                self.show()
            # ==================================================================
            self.switch_player()
            # ==================================================================
        # ======================================================================
        history.append( deepcopy( self ) )
        # ======================================================================
        return( history )
        # ======================================================================

    # ==========================================================================
    # ===== [メソッド] 敵プレイヤーのIDを返す =====
    # ==========================================================================
    @property
    def nopponent( self ):
        """ 敵プレイヤーのIDを返す.

          * プレイヤーのIDが1なら，2を返す．さもなくば，1を返す．
        """
        # ======================================================================
        return( 2 if ( self.nplayer == 1 ) else 1 )
        # ======================================================================

    # ==========================================================================
    # ===== [メソッド] プレイヤーのオブジェクトを返す =====
    # ==========================================================================
    @property
    def player( self ):
        """ プレイヤーのオブジェクトを返す.
        """
        # ======================================================================
        return( self.players[ self.nplayer - 1 ] )
        # ======================================================================

    # ==========================================================================
    # ===== [メソッド] 敵プレイヤーのオブジェクトを返す =====
    # ==========================================================================
    @property
    def opponent( self ):
        """ 敵プレイヤーのオブジェクトを返す.
        """
        # ======================================================================
        return( self.players[ self.nopponent - 1 ] )
        # ======================================================================

    # ==========================================================================
    # ===== [メソッド] プレイヤーを交代させる =====
    # ==========================================================================
    def switch_player( self ):
        """ プレイヤーを交代させる.
        """
        # ======================================================================
        self.nplayer = self.nopponent
        # ======================================================================

    # ==========================================================================
    # ===== [メソッド]  =====
    # ==========================================================================
    def copy( self ):
        """ .
        """
        # ======================================================================
        return( deepcopy( self ) )
        # ======================================================================

    # ==========================================================================
    # ===== [メソッド] プレイヤーから次の手を取得する =====
    # ==========================================================================
    def get_move( self ):
        """ プレイヤーから次の手を取得する.
        """
        # ======================================================================
        return( self.player.ask_move( self ) )
        # ======================================================================

    # ==========================================================================
    # ===== [メソッド] 指定した手を打ち，プレイヤーを交代させる =====
    # ==========================================================================
    def play_move( self, move ):
        """ 指定した手を打ち，プレイヤーを交代させる.
        """
        # ======================================================================
        result = self.make_move( move )
        self.switch_player()
        # ======================================================================
        return( result )
        # ======================================================================