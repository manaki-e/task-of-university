# ==============================================================================
# 345678901234567890123456789012345678901234567890123456789012345678901234567890
# ==============================================================================
""" プレイヤー(Human or AI).

 *  ``ask_move( game )``メソッドを持つオブジェクト．

    2021-05-19 IIJIMA, Tadashi
    (Original: Copyright (c) 2013 Zulko The MIT License)

  * 本来は，pip install easyAIで使用可能になるが...
    * 今回はこの先の改良のためにあえてソースコードを取り込んでいる．
    * https://pypi.org/project/easyAI/
  * ソースコード入手元:
    * https://github.com/Zulko/easyAI
"""

# ==============================================================================
# ===== 【クラス】
# ==============================================================================
class Human_Player:
    """ 人間のプレイヤーのクラス.
     which gets asked by text what moves
    she wants to play. 
    
    
    She can type ``show moves`` to display a list of
    moves, or ``quit`` to quit the game.
    """
    # ==========================================================================


    # ==========================================================================
    # ===== [初期化] イニシャライザ ============================================
    # ==========================================================================
    def __init__( self, name = 'Human' ):
        """ 初期化する.
        """
        # ======================================================================
        self.name = name
        # ======================================================================

    # ==========================================================================
    # ===== [メソッド] 次に打つ手を尋ねる  =====================================
    # ==========================================================================
    def ask_move( self, game ):
        """ 次に打つ手を尋ねる.
        """
        # ======================================================================
        possible_moves = game.possible_moves()
        # The str version of every move for comparison with the user input:
        possible_moves_str = list(map(str, game.possible_moves()))
        move = "NO_MOVE_DECIDED_YET"
        while True:
            move = input("\nPlayer %s what do you play ? "%(game.nplayer))
            if move == 'show moves':
                print ("Possible moves:\n"+ "\n".join(
                       ["#%d: %s"%(i+1,m) for i,m in enumerate(possible_moves)])
                       +"\nType a move or type 'move #move_number' to play.")

            elif move == 'quit':
                raise KeyboardInterrupt

            elif move.startswith("move #"):
                # Fetch the corresponding move and return.
                move = possible_moves[int(move[6:])-1]
                return move

            elif str(move) in possible_moves_str:
                # Transform the move into its real type (integer, etc. and return).
                move = possible_moves[possible_moves_str.index(str(move))]
                return move
        # ======================================================================

# ==============================================================================
# ===== [クラス]
# ==============================================================================
class AI_Player:
    """ Class for an AI player. 
    
    This class must be initialized with an
    AI algortihm, like ``AI_Player( Negamax(9) )``
    """
    # ==========================================================================

    # ==========================================================================
    # ===== [初期化] イニシャライザ ============================================
    # ==========================================================================
    def __init__( self, AI_algo, name = 'AI' ):
        """ 初期化する.
        """
        # ======================================================================
        self.AI_algo = AI_algo
        self.name    = name
        self.move    = {}
        # ======================================================================

    # ==========================================================================
    # ===== [メソッド] 次に打つ手を尋ねる  =====================================
    # ==========================================================================
    def ask_move( self, game ):
        """ 次に打つ手を尋ねる.
        """
        # ======================================================================
        return( self.AI_algo( game ) )
        # ======================================================================
# ==============================================================================
